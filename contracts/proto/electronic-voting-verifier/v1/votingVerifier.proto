syntax = "proto3";

option go_package = "github.com/aakosarev/electronic-voting-system/contracts/gen/go/electronic-voting-verifier/v1";

import "google/protobuf/empty.proto";

message GetPublicKeyForVotingIDRequest {
  int32 votingID = 1;
}

message GetPublicKeyForVotingIDResponse {
  bytes publicKeyBytes = 1;
}

message SignBlindedPublicKeyRequest {
  int32 userID = 1;
  int32 votingID = 2;
  bytes blindedPublicKey = 3;
}

message SignBlindedPublicKeyResponse {
    bytes signedBlindedPublicKey = 1;
}

message RegisterAddressToVotingBySignedTokenRequest {
  int32 votingID = 1;
  bytes token = 2;
  bytes signedToken = 3;
  string address = 4;
}

message GenerateRSAKeyPairForVotingIDRequest {
  int32 votingID = 1;
}

service VotingVerifier {
  rpc GetPublicKeyForVotingID(GetPublicKeyForVotingIDRequest) returns (GetPublicKeyForVotingIDResponse);
  rpc SignBlindedPublicKey(SignBlindedPublicKeyRequest) returns (SignBlindedPublicKeyResponse);
  rpc RegisterAddressToVotingBySignedToken(RegisterAddressToVotingBySignedTokenRequest) returns (google.protobuf.Empty);
  rpc GenerateRSAKeyPairForVotingID(GenerateRSAKeyPairForVotingIDRequest) returns (google.protobuf.Empty);
}