syntax = "proto3";

option go_package = "github.com/aakosarev/electronic-voting-system/contracts/gen/go/electronic-voting-verifier/v1";

import "google/protobuf/empty.proto";

message GetPublicKeyForVotingIDRequest {
  int32 votingID = 1;
}

message GetPublicKeyForVotingIDResponse {
  bytes publicKeyBytes = 1;
}

message SignBlindedAddressRequest {
  int32 userID = 1;
  int32 votingID = 2;
  bytes blindedAddress = 3;
}

message SignBlindedAddressResponse {
    bytes signedBlindedAddress= 1;
}

message RegisterAddressRequest {
  string address = 1;
  bytes signedAddress = 2;
  int32 votingID = 3;
}

message GenerateRSAKeyPairForVotingIDRequest {
  int32 votingID = 1;
}

message GetRegistrationStatusesRequest {
  map<int32, string> addresses = 1;
}

message GetRegistrationStatusesResponse {
  map<int32, bool> statuses = 1;
}

service VotingVerifier {
  rpc GetPublicKeyForVotingID(GetPublicKeyForVotingIDRequest) returns (GetPublicKeyForVotingIDResponse);
  rpc SignBlindedAddress(SignBlindedAddressRequest) returns (SignBlindedAddressResponse);
  rpc RegisterAddress(RegisterAddressRequest) returns (google.protobuf.Empty);
  rpc GenerateRSAKeyPairForVotingID(GenerateRSAKeyPairForVotingIDRequest) returns (google.protobuf.Empty);
  rpc GetRegistrationStatuses(GetRegistrationStatusesRequest) returns (GetRegistrationStatusesResponse);
}