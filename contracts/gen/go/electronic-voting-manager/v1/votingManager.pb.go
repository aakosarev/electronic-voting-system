// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: votingManager.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVotingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VotingTitle   string                 `protobuf:"bytes,1,opt,name=votingTitle,proto3" json:"votingTitle,omitempty"`
	VotingOptions []string               `protobuf:"bytes,2,rep,name=votingOptions,proto3" json:"votingOptions,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *CreateVotingRequest) Reset() {
	*x = CreateVotingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votingManager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVotingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVotingRequest) ProtoMessage() {}

func (x *CreateVotingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_votingManager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVotingRequest.ProtoReflect.Descriptor instead.
func (*CreateVotingRequest) Descriptor() ([]byte, []int) {
	return file_votingManager_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVotingRequest) GetVotingTitle() string {
	if x != nil {
		return x.VotingTitle
	}
	return ""
}

func (x *CreateVotingRequest) GetVotingOptions() []string {
	if x != nil {
		return x.VotingOptions
	}
	return nil
}

func (x *CreateVotingRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type Voting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VotingID    int32                  `protobuf:"varint,1,opt,name=votingID,proto3" json:"votingID,omitempty"`
	VotingTitle string                 `protobuf:"bytes,2,opt,name=votingTitle,proto3" json:"votingTitle,omitempty"`
	EndTime     int64                  `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Address     string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	CreatedOn   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdOn,proto3" json:"createdOn,omitempty"`
}

func (x *Voting) Reset() {
	*x = Voting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votingManager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voting) ProtoMessage() {}

func (x *Voting) ProtoReflect() protoreflect.Message {
	mi := &file_votingManager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voting.ProtoReflect.Descriptor instead.
func (*Voting) Descriptor() ([]byte, []int) {
	return file_votingManager_proto_rawDescGZIP(), []int{1}
}

func (x *Voting) GetVotingID() int32 {
	if x != nil {
		return x.VotingID
	}
	return 0
}

func (x *Voting) GetVotingTitle() string {
	if x != nil {
		return x.VotingTitle
	}
	return ""
}

func (x *Voting) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Voting) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Voting) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

type GetAllVotingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Votings []*Voting `protobuf:"bytes,1,rep,name=votings,proto3" json:"votings,omitempty"`
}

func (x *GetAllVotingsResponse) Reset() {
	*x = GetAllVotingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votingManager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllVotingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVotingsResponse) ProtoMessage() {}

func (x *GetAllVotingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_votingManager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVotingsResponse.ProtoReflect.Descriptor instead.
func (*GetAllVotingsResponse) Descriptor() ([]byte, []int) {
	return file_votingManager_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllVotingsResponse) GetVotings() []*Voting {
	if x != nil {
		return x.Votings
	}
	return nil
}

type AddRightToVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	VotingID int32 `protobuf:"varint,2,opt,name=votingID,proto3" json:"votingID,omitempty"`
}

func (x *AddRightToVoteRequest) Reset() {
	*x = AddRightToVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votingManager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRightToVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRightToVoteRequest) ProtoMessage() {}

func (x *AddRightToVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_votingManager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRightToVoteRequest.ProtoReflect.Descriptor instead.
func (*AddRightToVoteRequest) Descriptor() ([]byte, []int) {
	return file_votingManager_proto_rawDescGZIP(), []int{3}
}

func (x *AddRightToVoteRequest) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AddRightToVoteRequest) GetVotingID() int32 {
	if x != nil {
		return x.VotingID
	}
	return 0
}

var File_votingManager_proto protoreflect.FileDescriptor

var file_votingManager_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x76,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x06, 0x56, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x4f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e,
	0x22, 0x3a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x56, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x4b, 0x0a, 0x15,
	0x41, 0x64, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x32, 0xd0, 0x01, 0x0a, 0x0d, 0x56, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x5d, 0x5a, 0x5b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x61, 0x6b, 0x6f, 0x73,
	0x61, 0x72, 0x65, 0x76, 0x2f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x2d,
	0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_votingManager_proto_rawDescOnce sync.Once
	file_votingManager_proto_rawDescData = file_votingManager_proto_rawDesc
)

func file_votingManager_proto_rawDescGZIP() []byte {
	file_votingManager_proto_rawDescOnce.Do(func() {
		file_votingManager_proto_rawDescData = protoimpl.X.CompressGZIP(file_votingManager_proto_rawDescData)
	})
	return file_votingManager_proto_rawDescData
}

var file_votingManager_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_votingManager_proto_goTypes = []interface{}{
	(*CreateVotingRequest)(nil),   // 0: CreateVotingRequest
	(*Voting)(nil),                // 1: Voting
	(*GetAllVotingsResponse)(nil), // 2: GetAllVotingsResponse
	(*AddRightToVoteRequest)(nil), // 3: AddRightToVoteRequest
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_votingManager_proto_depIdxs = []int32{
	4, // 0: CreateVotingRequest.endTime:type_name -> google.protobuf.Timestamp
	4, // 1: Voting.createdOn:type_name -> google.protobuf.Timestamp
	1, // 2: GetAllVotingsResponse.votings:type_name -> Voting
	0, // 3: VotingManager.CreateVoting:input_type -> CreateVotingRequest
	5, // 4: VotingManager.GetAllVotings:input_type -> google.protobuf.Empty
	3, // 5: VotingManager.AddRightToVote:input_type -> AddRightToVoteRequest
	5, // 6: VotingManager.CreateVoting:output_type -> google.protobuf.Empty
	2, // 7: VotingManager.GetAllVotings:output_type -> GetAllVotingsResponse
	5, // 8: VotingManager.AddRightToVote:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_votingManager_proto_init() }
func file_votingManager_proto_init() {
	if File_votingManager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_votingManager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVotingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votingManager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votingManager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllVotingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votingManager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRightToVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_votingManager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_votingManager_proto_goTypes,
		DependencyIndexes: file_votingManager_proto_depIdxs,
		MessageInfos:      file_votingManager_proto_msgTypes,
	}.Build()
	File_votingManager_proto = out.File
	file_votingManager_proto_rawDesc = nil
	file_votingManager_proto_goTypes = nil
	file_votingManager_proto_depIdxs = nil
}
